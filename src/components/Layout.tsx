'use client';

import React, { useEffect, useState, ReactNode } from 'react';
import {
  Box,
<<<<<<< HEAD
  Toolbar,
  Typography,
  Container,
  Drawer,
  IconButton,
  List,
  ListItem,
  ListItemText,
  Badge,
  Button,
  useMediaQuery,
} from '@mui/material';
import Link from 'next/link';
=======
  Container,
  useMediaQuery,
  IconButton,
  Tooltip,
} from '@mui/material';
>>>>>>> 2945eb6 (Initial commit)
import { usePathname, useRouter } from 'next/navigation';
import { useAuth } from '../context/AuthContext';
import NotificationDrawer from './NotificationDrawer';
import Banner from './Banner';
import { getNotifications } from '../services/api';
import { Notification } from '../types';
<<<<<<< HEAD
import Image from 'next/image';
import Sidebar from './Sidebar';
import { useTheme } from '@mui/material/styles';
import BackToTop from './BackToTop';
=======
import Sidebar from './layout/Sidebar';
import { useTheme } from '@mui/material/styles';
import BackToTop from './BackToTop';
import Navbar from './layout/Navbar';
import Footer from './layout/Footer';
import MobileSidebar from './layout/MobileSidebar';
>>>>>>> 2945eb6 (Initial commit)

interface LayoutProps {
  children: ReactNode;
  isFooter?: boolean;
  onFilterOpen?: () => void;
}

const Layout = ({ children, isFooter = true, onFilterOpen }: LayoutProps) => {
  const [mobileOpen, setMobileOpen] = useState(false);
  const [notifications, setNotifications] = useState<Notification[]>([]);
  const [notificationDrawerOpen, setNotificationDrawerOpen] = useState(false);
  const [isCollapsed, setIsCollapsed] = useState(false);
  const { isAuthenticated, logout } = useAuth();
  const router = useRouter();
  const pathname = usePathname();
  const [isClient, setIsClient] = useState(false);
  const isFeedPage = pathname === '/feed';
  const isHomePage = pathname === '/';
  const isMobile = useMediaQuery('(max-width: 600px)');
  const theme = useTheme();

  // Use useEffect to mark when component is mounted on client
  useEffect(() => {
    setIsClient(true);
  }, []);

  // Add fetchNotifications function
  const fetchNotifications = async () => {
    try {
      const data = await getNotifications();
      setNotifications(data);
    } catch (error) {
      console.error('Error fetching notifications:', error);
    }
  };

  // Add useEffect to fetch notifications when logged in
  useEffect(() => {
    if (isAuthenticated) {
      fetchNotifications();
    }
  }, [isAuthenticated]);

  // Add this line to calculate unread notifications
  const unreadCount = notifications.filter(notification => !notification.isRead).length;

  const handleDrawerToggle = () => {
    setMobileOpen(!mobileOpen);
  };

  const handleToggleCollapse = () => {
    setIsCollapsed(!isCollapsed);
  };

  const menuItems = isAuthenticated ? [
<<<<<<< HEAD
    { text: 'Feed', icon: (
      <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M12.024 0.833313H11.9753C11.4825 0.833305 11.0775 0.833298 10.7499 0.864453C10.4094 0.896827 10.1011 0.966336 9.82078 1.13815C9.54244 1.30872 9.30841 1.54274 9.13784 1.82109C8.96603 2.10145 8.89652 2.40968 8.86415 2.75017C8.83299 3.07784 8.833 3.48285 8.83301 3.97561V4.02435C8.833 4.51711 8.83299 4.92212 8.86415 5.24979C8.89652 5.59028 8.96603 5.89851 9.13784 6.17887C9.30841 6.45722 9.54244 6.69124 9.82078 6.86181C10.1011 7.03362 10.4094 7.10313 10.7499 7.13551C11.0775 7.16666 11.4825 7.16666 11.9753 7.16665H12.024C12.5168 7.16666 12.9218 7.16666 13.2495 7.13551C13.59 7.10313 13.8982 7.03362 14.1786 6.86181C14.4569 6.69124 14.6909 6.45722 14.8615 6.17887C15.0333 5.89851 15.1028 5.59028 15.1352 5.24979C15.1664 4.92212 15.1664 4.51712 15.1663 4.02435V3.97561C15.1664 3.48285 15.1664 3.07784 15.1352 2.75017C15.1028 2.40968 15.0333 2.10145 14.8615 1.82109C14.6909 1.54274 14.4569 1.30872 14.1786 1.13815C13.8982 0.966336 13.59 0.896827 13.2495 0.864453C12.9218 0.833298 12.5168 0.833305 12.024 0.833313Z" fill="black"/>
      <path d="M3.97531 0.833313H4.02404C4.5168 0.833305 4.92182 0.833298 5.24948 0.864453C5.58997 0.896827 5.8982 0.966336 6.17857 1.13815C6.45691 1.30872 6.69094 1.54274 6.86151 1.82109C7.03332 2.10145 7.10283 2.40968 7.1352 2.75017C7.16636 3.07783 7.16635 3.48284 7.16634 3.97559V4.02435C7.16635 4.51711 7.16636 4.92213 7.1352 5.24979C7.10283 5.59028 7.03332 5.89851 6.86151 6.17887C6.69094 6.45722 6.45691 6.69124 6.17857 6.86181C5.8982 7.03362 5.58997 7.10313 5.24948 7.13551C4.92182 7.16666 4.51682 7.16666 4.02407 7.16665H3.9753C3.48255 7.16666 3.07753 7.16666 2.74987 7.13551C2.40938 7.10313 2.10115 7.03362 1.82078 6.86181C1.54244 6.69124 1.30841 6.45722 1.13784 6.17887C0.966031 5.89851 0.896522 5.59028 0.864148 5.24979C0.832993 4.92212 0.833 4.51712 0.833008 4.02435V3.97562C0.833 3.48285 0.832993 3.07784 0.864148 2.75017C0.896522 2.40968 0.966031 2.10145 1.13784 1.82109C1.30841 1.54274 1.54244 1.30872 1.82078 1.13815C2.10115 0.966336 2.40938 0.896827 2.74987 0.864453C3.07753 0.833298 3.48255 0.833305 3.97531 0.833313Z" fill="black"/>
      <path d="M4.02404 8.83331H3.97531C3.48256 8.8333 3.07753 8.8333 2.74987 8.86445C2.40938 8.89683 2.10115 8.96634 1.82078 9.13815C1.54244 9.30872 1.30841 9.54274 1.13784 9.82109C0.966031 10.1015 0.896522 10.4097 0.864148 10.7502C0.832993 11.0778 0.833 11.4829 0.833008 11.9756V12.0243C0.833 12.5171 0.832993 12.9221 0.864148 13.2498C0.896522 13.5903 0.966031 13.8985 1.13784 14.1789C1.30841 14.4572 1.54244 14.6912 1.82078 14.8618C2.10115 15.0336 2.40938 15.1031 2.74987 15.1355C3.07753 15.1667 3.48254 15.1667 3.9753 15.1666H4.02405C4.51681 15.1667 4.92182 15.1667 5.24948 15.1355C5.58997 15.1031 5.8982 15.0336 6.17857 14.8618C6.45691 14.6912 6.69094 14.4572 6.86151 14.1789C7.03332 13.8985 7.10283 13.5903 7.1352 13.2498C7.16636 12.9221 7.16635 12.5171 7.16634 12.0244V11.9756C7.16635 11.4828 7.16636 11.0778 7.1352 10.7502C7.10283 10.4097 7.03332 10.1015 6.86151 9.82109C6.69094 9.54274 6.45691 9.30872 6.17857 9.13815C5.8982 8.96634 5.58997 8.89683 5.24948 8.86445C4.92182 8.8333 4.51679 8.8333 4.02404 8.83331Z" fill="black"/>
      <path d="M12.024 8.83331H11.9753C11.4825 8.8333 11.0775 8.8333 10.7499 8.86445C10.4094 8.89683 10.1011 8.96634 9.82078 9.13815C9.54244 9.30872 9.30841 9.54274 9.13784 9.82109C8.96603 10.1015 8.89652 10.4097 8.86415 10.7502C8.83299 11.0778 8.833 11.4829 8.83301 11.9756V12.0243C8.833 12.5171 8.83299 12.9221 8.86415 13.2498C8.89652 13.5903 8.96603 13.8985 9.13784 14.1789C9.30841 14.4572 9.54244 14.6912 9.82078 14.8618C10.1011 15.0336 10.4094 15.1031 10.7499 15.1355C11.0775 15.1667 11.4825 15.1667 11.9753 15.1666H12.024C12.5168 15.1667 12.9218 15.1667 13.2495 15.1355C13.59 15.1031 13.8982 15.0336 14.1786 14.8618C14.4569 14.6912 14.6909 14.4572 14.8615 14.1789C15.0333 13.8985 15.1028 13.5903 15.1352 13.2498C15.1664 12.9221 15.1664 12.5171 15.1663 12.0244V11.9756C15.1664 11.4828 15.1664 11.0778 15.1352 10.7502C15.1028 10.4097 15.0333 10.1015 14.8615 9.82109C14.6909 9.54274 14.4569 9.30872 14.1786 9.13815C13.8982 8.96634 13.59 8.89683 13.2495 8.86445C12.9218 8.8333 12.5168 8.8333 12.024 8.83331Z" fill="black"/>
      </svg>
    ), path: '/feed' },
    { text: 'Action Hub', icon: (
      <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M9.07208 0.764839C9.54318 0.965637 9.86491 1.44175 9.86491 2.01123L9.86536 6.52318C9.86537 6.59681 9.92506 6.6565 9.99869 6.6565H12.0665C12.6571 6.6565 13.0639 7.05506 13.2314 7.4734C13.3986 7.89129 13.3761 8.42802 13.0422 8.8566L8.37668 14.8452C8.00245 15.3256 7.41401 15.442 6.92814 15.2349C6.45705 15.0341 6.13531 14.558 6.13531 13.9885L6.13487 9.47653C6.13486 9.40289 6.07517 9.3432 6.00153 9.3432H3.93368C3.34314 9.3432 2.93629 8.94464 2.76886 8.5263C2.60162 8.10841 2.62415 7.57168 2.95805 7.1431L7.62354 1.15448C7.99777 0.674121 8.58621 0.55774 9.07208 0.764839Z" fill="#616161"/>
      </svg>
    ), path: '/action-hub' },
    { text: 'Reports', icon: (
      <i className="ri-file-text-fill text-xl"></i>
    ), path: '/alerts-summary' },
    { text: 'Insights', icon: (
      <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M9.4259 0.996408L9.39157 0.988655C9.0577 0.913215 8.74998 0.843685 8.48475 0.834454C8.17819 0.823785 7.89457 0.890654 7.63029 1.10259C7.35327 1.32474 7.23306 1.61366 7.18003 1.9316C7.13242 2.21705 7.13245 2.57168 7.13249 2.97285L7.13249 7.51129C7.13249 7.82556 7.13249 7.98269 7.23012 8.08032C7.32775 8.17795 7.48489 8.17795 7.79916 8.17795L13.0465 8.17796C13.4456 8.178 13.8026 8.17805 14.0905 8.12584C14.4163 8.06677 14.7051 7.93294 14.9224 7.63754C15.1262 7.36047 15.1879 7.0741 15.1596 6.76254C15.1357 6.49942 15.0445 6.20396 14.9484 5.89271L14.9375 5.8572C14.1947 3.44898 12.0711 1.59363 9.4259 0.996408Z" fill="#616161"/>
      <path d="M5.70501 4.81515C3.82301 4.81515 2.22103 6.1099 2.22103 7.79073C2.22103 8.00508 2.40656 8.17884 2.63542 8.17884H5.70501C5.93387 8.17884 6.1194 8.00508 6.1194 7.79073V5.20326C6.1194 4.98891 5.93387 4.81515 5.70501 4.81515Z" fill="#616161"/>
      <path d="M2.87273 9.17973C2.48836 9.17966 2.13399 9.1796 1.84678 9.23828C1.50955 9.30718 1.22991 9.46229 1.03009 9.7717C0.849648 10.0511 0.794924 10.3238 0.858476 10.6199C0.909913 10.8594 1.04058 11.1059 1.16787 11.3461L1.18576 11.3799C1.97446 12.8697 3.70523 13.8796 5.68459 13.8796C5.92489 13.8796 6.11968 13.694 6.11968 13.4649L6.11968 9.59443C6.11968 9.48445 6.07384 9.37897 5.99225 9.3012C5.91065 9.22343 5.79999 9.17974 5.6846 9.17974L2.87273 9.17973Z" fill="#616161"/>
      <path d="M7.13249 9.61079C7.13249 9.37272 7.32509 9.17973 7.56268 9.17973H13.2985C13.5361 9.17973 13.7287 9.37272 13.7287 9.61079C13.7287 12.1584 11.8704 14.2713 9.37833 14.9678L9.34418 14.9773C9.03378 15.0641 8.74232 15.1457 8.48589 15.164C8.1848 15.1854 7.90754 15.1237 7.64264 14.9222C7.36184 14.7085 7.2367 14.4267 7.18149 14.1118C7.13241 13.8319 7.13245 13.4844 7.13249 13.0942L7.13249 9.61079Z" fill="#616161"/>
      </svg>
    ), path: '/insights' },
    { text: 'Subscription', icon: (
      <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M9.03138 2.16663C10.2574 2.16662 11.2202 2.16661 11.9793 2.25236C12.7541 2.33988 13.3823 2.52237 13.9046 2.93482C14.0609 3.05829 14.2059 3.19466 14.3377 3.34249C14.7818 3.84063 14.9801 4.44442 15.0746 5.18519C15.0855 5.27043 15.0909 5.31304 15.0811 5.35048C15.0655 5.41032 15.0196 5.46246 14.9622 5.48553C14.9263 5.49996 14.8814 5.49996 14.7915 5.49996H1.20783C1.11799 5.49996 1.07305 5.49996 1.03715 5.48553C0.979777 5.46246 0.933859 5.41032 0.918237 5.35048C0.908462 5.31304 0.913897 5.27043 0.924766 5.18519C1.01923 4.44442 1.21755 3.84063 1.66167 3.34249C1.79347 3.19466 1.93842 3.05829 2.09477 2.93482C2.61702 2.52237 3.24529 2.33988 4.02007 2.25236C4.77913 2.16661 5.74199 2.16662 6.96799 2.16663H9.03138Z" fill="#616161"/>
      <path fillRule="evenodd" clipRule="evenodd" d="M15.1663 8.03513C15.1664 9.18446 15.1664 10.0951 15.0746 10.8147C14.9801 11.5555 14.7818 12.1593 14.3377 12.6574C14.2059 12.8053 14.0609 12.9416 13.9046 13.0651C13.3823 13.4775 12.7541 13.66 11.9793 13.7476C11.2202 13.8333 10.2574 13.8333 9.03137 13.8333H6.96798C5.74197 13.8333 4.77912 13.8333 4.02006 13.7476C3.24529 13.66 2.61701 13.4775 2.09476 13.0651C1.93841 12.9416 1.79346 12.8053 1.66166 12.6574C1.21755 12.1593 1.01922 11.5555 0.924758 10.8147C0.832992 10.0951 0.832999 9.18445 0.833008 8.03511V7.9648C0.833005 7.58096 0.833002 7.22373 0.836418 6.89135C0.838307 6.70756 0.839251 6.61567 0.897703 6.55781C0.956154 6.49996 1.04875 6.49996 1.23393 6.49996H14.7654C14.9506 6.49996 15.0432 6.49996 15.1016 6.55781C15.1601 6.61567 15.161 6.70756 15.1629 6.89135C15.1663 7.22362 15.1663 7.58073 15.1663 7.96443V8.03513ZM6.833 10.6666C6.833 10.3905 7.05686 10.1666 7.333 10.1666H8.333C8.60914 10.1666 8.833 10.3905 8.833 10.6666C8.833 10.9428 8.60914 11.1666 8.333 11.1666H7.333C7.05686 11.1666 6.833 10.9428 6.833 10.6666ZM10.333 10.1666C10.0569 10.1666 9.833 10.3905 9.833 10.6666C9.833 10.9428 10.0569 11.1666 10.333 11.1666H12.6663C12.9425 11.1666 13.1663 10.9428 13.1663 10.6666C13.1663 10.3905 12.9425 10.1666 12.6663 10.1666H10.333Z" fill="#616161"/>
      </svg>
    ), path: '/subscription' },
    { text: 'Settings', icon: (
      <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path fillRule="evenodd" clipRule="evenodd" d="M8.11672 0.837754C8.0388 0.831914 7.96055 0.831914 7.88263 0.837754C7.54689 0.862913 7.27481 1.01441 7.02621 1.2089C6.79239 1.39184 6.53373 1.65053 6.23121 1.95308L5.72405 2.3873C5.72405 2.3873 5.4521 2.42267 5.02146 2.42267C4.54732 2.42264 4.14206 2.42262 3.81821 2.46616C3.47241 2.51266 3.14558 2.61688 2.88105 2.88141C2.61651 3.14594 2.51229 3.47278 2.4658 3.81858C2.42226 4.14243 2.42228 4.54769 2.4223 5.02183L2.38694 5.72442L1.95271 6.23157C1.65018 6.53408 1.39147 6.79277 1.20854 7.02658C1.01404 7.27518 0.862547 7.54726 0.837387 7.88299C0.831548 7.96092 0.831548 8.03916 0.837387 8.11709C0.862547 8.45282 1.01404 8.7249 1.20854 8.9735C1.39147 9.20732 1.65016 9.46599 1.95271 9.76851L2.38694 10.2757L2.4223 10.9783C2.42228 11.4524 2.42226 11.8577 2.4658 12.1815C2.51229 12.5273 2.61651 12.8541 2.88105 13.1187C3.14558 13.3832 3.47241 13.4874 3.81821 13.5339C4.14206 13.5775 4.54733 13.5774 5.02147 13.5774L5.72405 13.6128L6.2312 14.047C6.5337 14.3495 6.79241 14.6083 7.02621 14.7912C7.27481 14.9857 7.54689 15.1372 7.88263 15.1623C7.96055 15.1682 8.0388 15.1682 8.11672 15.1623C8.45246 15.1372 8.72454 14.9857 8.97313 14.7912C9.20696 14.6082 9.46563 14.3495 9.76817 14.047L10.2753 13.6128L10.9779 13.5774C11.452 13.5774 11.8573 13.5775 12.1811 13.5339C12.5269 13.4874 12.8538 13.3832 13.1183 13.1187C13.3828 12.8541 13.4871 12.5273 13.5335 12.1815C13.5771 11.8577 13.5771 11.4524 13.577 10.9782L13.6124 10.2757L14.0466 9.76849C14.3492 9.46598 14.6079 9.20732 14.7908 8.9735C14.9853 8.7249 15.1368 8.45282 15.162 8.11709C15.1678 8.03916 15.1678 7.96092 15.162 7.88299C15.1368 7.54726 14.9853 7.27518 14.7908 7.02658C14.6079 6.79275 14.3492 6.53408 14.0466 6.23155L13.6124 5.72442L13.577 5.02183C13.5771 4.54769 13.5771 4.14243 13.5335 3.81858C13.4871 3.47278 13.3828 3.14595 13.1183 2.88141C12.8538 2.61688 12.5269 2.51266 12.1811 2.46616C11.8573 2.42262 11.452 2.42264 10.9779 2.42267C10.5472 2.42267 10.2362 2.3711 10.2362 2.3711L9.76814 1.95308C9.46562 1.65053 9.20695 1.39184 8.97313 1.2089C8.72454 1.01441 8.45246 0.862913 8.11672 0.837754ZM7.99967 5.16671C6.43487 5.16671 5.16634 6.43523 5.16634 8.00004C5.16634 9.56485 6.43487 10.8334 7.99967 10.8334C9.56448 10.8334 10.833 9.56485 10.833 8.00004C10.833 6.43523 9.56448 5.16671 7.99967 5.16671Z" fill="#616161"/>
      </svg>
    ), path: '/profile' },
=======
    {
      text: 'Feed', icon: (
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M12.024 0.833313H11.9753C11.4825 0.833305 11.0775 0.833298 10.7499 0.864453C10.4094 0.896827 10.1011 0.966336 9.82078 1.13815C9.54244 1.30872 9.30841 1.54274 9.13784 1.82109C8.96603 2.10145 8.89652 2.40968 8.86415 2.75017C8.83299 3.07784 8.833 3.48285 8.83301 3.97561V4.02435C8.833 4.51711 8.83299 4.92212 8.86415 5.24979C8.89652 5.59028 8.96603 5.89851 9.13784 6.17887C9.30841 6.45722 9.54244 6.69124 9.82078 6.86181C10.1011 7.03362 10.4094 7.10313 10.7499 7.13551C11.0775 7.16666 11.4825 7.16666 11.9753 7.16665H12.024C12.5168 7.16666 12.9218 7.16666 13.2495 7.13551C13.59 7.10313 13.8982 7.03362 14.1786 6.86181C14.4569 6.69124 14.6909 6.45722 14.8615 6.17887C15.0333 5.89851 15.1028 5.59028 15.1352 5.24979C15.1664 4.92212 15.1664 4.51712 15.1663 4.02435V3.97561C15.1664 3.48285 15.1664 3.07784 15.1352 2.75017C15.1028 2.40968 15.0333 2.10145 14.8615 1.82109C14.6909 1.54274 14.4569 1.30872 14.1786 1.13815C13.8982 0.966336 13.59 0.896827 13.2495 0.864453C12.9218 0.833298 12.5168 0.833305 12.024 0.833313Z" fill="black" />
          <path d="M3.97531 0.833313H4.02404C4.5168 0.833305 4.92182 0.833298 5.24948 0.864453C5.58997 0.896827 5.8982 0.966336 6.17857 1.13815C6.45691 1.30872 6.69094 1.54274 6.86151 1.82109C7.03332 2.10145 7.10283 2.40968 7.1352 2.75017C7.16636 3.07783 7.16635 3.48284 7.16634 3.97559V4.02435C7.16635 4.51711 7.16636 4.92213 7.1352 5.24979C7.10283 5.59028 7.03332 5.89851 6.86151 6.17887C6.69094 6.45722 6.45691 6.69124 6.17857 6.86181C5.8982 7.03362 5.58997 7.10313 5.24948 7.13551C4.92182 7.16666 4.51682 7.16666 4.02407 7.16665H3.9753C3.48255 7.16666 3.07753 7.16666 2.74987 7.13551C2.40938 7.10313 2.10115 7.03362 1.82078 6.86181C1.54244 6.69124 1.30841 6.45722 1.13784 6.17887C0.966031 5.89851 0.896522 5.59028 0.864148 5.24979C0.832993 4.92212 0.833 4.51712 0.833008 4.02435V3.97562C0.833 3.48285 0.832993 3.07784 0.864148 2.75017C0.896522 2.40968 0.966031 2.10145 1.13784 1.82109C1.30841 1.54274 1.54244 1.30872 1.82078 1.13815C2.10115 0.966336 2.40938 0.896827 2.74987 0.864453C3.07753 0.833298 3.48255 0.833305 3.97531 0.833313Z" fill="black" />
          <path d="M4.02404 8.83331H3.97531C3.48256 8.8333 3.07753 8.8333 2.74987 8.86445C2.40938 8.89683 2.10115 8.96634 1.82078 9.13815C1.54244 9.30872 1.30841 9.54274 1.13784 9.82109C0.966031 10.1015 0.896522 10.4097 0.864148 10.7502C0.832993 11.0778 0.833 11.4829 0.833008 11.9756V12.0243C0.833 12.5171 0.832993 12.9221 0.864148 13.2498C0.896522 13.5903 0.966031 13.8985 1.13784 14.1789C1.30841 14.4572 1.54244 14.6912 1.82078 14.8618C2.10115 15.0336 2.40938 15.1031 2.74987 15.1355C3.07753 15.1667 3.48254 15.1667 3.9753 15.1666H4.02405C4.51681 15.1667 4.92182 15.1667 5.24948 15.1355C5.58997 15.1031 5.8982 15.0336 6.17857 14.8618C6.45691 14.6912 6.69094 14.4572 6.86151 14.1789C7.03332 13.8985 7.10283 13.5903 7.1352 13.2498C7.16636 12.9221 7.16635 12.5171 7.16634 12.0244V11.9756C7.16635 11.4828 7.16636 11.0778 7.1352 10.7502C7.10283 10.4097 7.03332 10.1015 6.86151 9.82109C6.69094 9.54274 6.45691 9.30872 6.17857 9.13815C5.8982 8.96634 5.58997 8.89683 5.24948 8.86445C4.92182 8.8333 4.51679 8.8333 4.02404 8.83331Z" fill="black" />
          <path d="M12.024 8.83331H11.9753C11.4825 8.8333 11.0775 8.8333 10.7499 8.86445C10.4094 8.89683 10.1011 8.96634 9.82078 9.13815C9.54244 9.30872 9.30841 9.54274 9.13784 9.82109C8.96603 10.1015 8.89652 10.4097 8.86415 10.7502C8.83299 11.0778 8.833 11.4829 8.83301 11.9756V12.0243C8.833 12.5171 8.83299 12.9221 8.86415 13.2498C8.89652 13.5903 8.96603 13.8985 9.13784 14.1789C9.30841 14.4572 9.54244 14.6912 9.82078 14.8618C10.1011 15.0336 10.4094 15.1031 10.7499 15.1355C11.0775 15.1667 11.4825 15.1667 11.9753 15.1666H12.024C12.5168 15.1667 12.9218 15.1667 13.2495 15.1355C13.59 15.1031 13.8982 15.0336 14.1786 14.8618C14.4569 14.6912 14.6909 14.4572 14.8615 14.1789C15.0333 13.8985 15.1028 13.5903 15.1352 13.2498C15.1664 12.9221 15.1664 12.5171 15.1663 12.0244V11.9756C15.1664 11.4828 15.1664 11.0778 15.1352 10.7502C15.1028 10.4097 15.0333 10.1015 14.8615 9.82109C14.6909 9.54274 14.4569 9.30872 14.1786 9.13815C13.8982 8.96634 13.59 8.89683 13.2495 8.86445C12.9218 8.8333 12.5168 8.8333 12.024 8.83331Z" fill="black" />
        </svg>
      ), path: '/feed'
    },
    {
      text: 'Action Hub', icon: (
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M9.07208 0.764839C9.54318 0.965637 9.86491 1.44175 9.86491 2.01123L9.86536 6.52318C9.86537 6.59681 9.92506 6.6565 9.99869 6.6565H12.0665C12.6571 6.6565 13.0639 7.05506 13.2314 7.4734C13.3986 7.89129 13.3761 8.42802 13.0422 8.8566L8.37668 14.8452C8.00245 15.3256 7.41401 15.442 6.92814 15.2349C6.45705 15.0341 6.13531 14.558 6.13531 13.9885L6.13487 9.47653C6.13486 9.40289 6.07517 9.3432 6.00153 9.3432H3.93368C3.34314 9.3432 2.93629 8.94464 2.76886 8.5263C2.60162 8.10841 2.62415 7.57168 2.95805 7.1431L7.62354 1.15448C7.99777 0.674121 8.58621 0.55774 9.07208 0.764839Z" fill="#616161" />
        </svg>
      ), path: '/action-hub'
    },
    {
      text: 'Reports', icon: (
        <i className="ri-file-text-fill text-xl"></i>
      ), path: '/alerts-summary'
    },
    {
      text: 'Insights', icon: (
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M9.4259 0.996408L9.39157 0.988655C9.0577 0.913215 8.74998 0.843685 8.48475 0.834454C8.17819 0.823785 7.89457 0.890654 7.63029 1.10259C7.35327 1.32474 7.23306 1.61366 7.18003 1.9316C7.13242 2.21705 7.13245 2.57168 7.13249 2.97285L7.13249 7.51129C7.13249 7.82556 7.13249 7.98269 7.23012 8.08032C7.32775 8.17795 7.48489 8.17795 7.79916 8.17795L13.0465 8.17796C13.4456 8.178 13.8026 8.17805 14.0905 8.12584C14.4163 8.06677 14.7051 7.93294 14.9224 7.63754C15.1262 7.36047 15.1879 7.0741 15.1596 6.76254C15.1357 6.49942 15.0445 6.20396 14.9484 5.89271L14.9375 5.8572C14.1947 3.44898 12.0711 1.59363 9.4259 0.996408Z" fill="#616161" />
          <path d="M5.70501 4.81515C3.82301 4.81515 2.22103 6.1099 2.22103 7.79073C2.22103 8.00508 2.40656 8.17884 2.63542 8.17884H5.70501C5.93387 8.17884 6.1194 8.00508 6.1194 7.79073V5.20326C6.1194 4.98891 5.93387 4.81515 5.70501 4.81515Z" fill="#616161" />
          <path d="M2.87273 9.17973C2.48836 9.17966 2.13399 9.1796 1.84678 9.23828C1.50955 9.30718 1.22991 9.46229 1.03009 9.7717C0.849648 10.0511 0.794924 10.3238 0.858476 10.6199C0.909913 10.8594 1.04058 11.1059 1.16787 11.3461L1.18576 11.3799C1.97446 12.8697 3.70523 13.8796 5.68459 13.8796C5.92489 13.8796 6.11968 13.694 6.11968 13.4649L6.11968 9.59443C6.11968 9.48445 6.07384 9.37897 5.99225 9.3012C5.91065 9.22343 5.79999 9.17974 5.6846 9.17974L2.87273 9.17973Z" fill="#616161" />
          <path d="M7.13249 9.61079C7.13249 9.37272 7.32509 9.17973 7.56268 9.17973H13.2985C13.5361 9.17973 13.7287 9.37272 13.7287 9.61079C13.7287 12.1584 11.8704 14.2713 9.37833 14.9678L9.34418 14.9773C9.03378 15.0641 8.74232 15.1457 8.48589 15.164C8.1848 15.1854 7.90754 15.1237 7.64264 14.9222C7.36184 14.7085 7.2367 14.4267 7.18149 14.1118C7.13241 13.8319 7.13245 13.4844 7.13249 13.0942L7.13249 9.61079Z" fill="#616161" />
        </svg>
      ), path: '/insights'
    },
    {
      text: 'Subscription', icon: (
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M9.03138 2.16663C10.2574 2.16662 11.2202 2.16661 11.9793 2.25236C12.7541 2.33988 13.3823 2.52237 13.9046 2.93482C14.0609 3.05829 14.2059 3.19466 14.3377 3.34249C14.7818 3.84063 14.9801 4.44442 15.0746 5.18519C15.0855 5.27043 15.0909 5.31304 15.0811 5.35048C15.0655 5.41032 15.0196 5.46246 14.9622 5.48553C14.9263 5.49996 14.8814 5.49996 14.7915 5.49996H1.20783C1.11799 5.49996 1.07305 5.49996 1.03715 5.48553C0.979777 5.46246 0.933859 5.41032 0.918237 5.35048C0.908462 5.31304 0.913897 5.27043 0.924766 5.18519C1.01923 4.44442 1.21755 3.84063 1.66167 3.34249C1.79347 3.19466 1.93842 3.05829 2.09477 2.93482C2.61702 2.52237 3.24529 2.33988 4.02007 2.25236C4.77913 2.16661 5.74199 2.16662 6.96799 2.16663H9.03138Z" fill="#616161" />
          <path fillRule="evenodd" clipRule="evenodd" d="M15.1663 8.03513C15.1664 9.18446 15.1664 10.0951 15.0746 10.8147C14.9801 11.5555 14.7818 12.1593 14.3377 12.6574C14.2059 12.8053 14.0609 12.9416 13.9046 13.0651C13.3823 13.4775 12.7541 13.66 11.9793 13.7476C11.2202 13.8333 10.2574 13.8333 9.03137 13.8333H6.96798C5.74197 13.8333 4.77912 13.8333 4.02006 13.7476C3.24529 13.66 2.61701 13.4775 2.09476 13.0651C1.93841 12.9416 1.79346 12.8053 1.66166 12.6574C1.21755 12.1593 1.01922 11.5555 0.924758 10.8147C0.832992 10.0951 0.832999 9.18445 0.833008 8.03511V7.9648C0.833005 7.58096 0.833002 7.22373 0.836418 6.89135C0.838307 6.70756 0.839251 6.61567 0.897703 6.55781C0.956154 6.49996 1.04875 6.49996 1.23393 6.49996H14.7654C14.9506 6.49996 15.0432 6.49996 15.1016 6.55781C15.1601 6.61567 15.161 6.70756 15.1629 6.89135C15.1663 7.22362 15.1663 7.58073 15.1663 7.96443V8.03513ZM6.833 10.6666C6.833 10.3905 7.05686 10.1666 7.333 10.1666H8.333C8.60914 10.1666 8.833 10.3905 8.833 10.6666C8.833 10.9428 8.60914 11.1666 8.333 11.1666H7.333C7.05686 11.1666 6.833 10.9428 6.833 10.6666ZM10.333 10.1666C10.0569 10.1666 9.833 10.3905 9.833 10.6666C9.833 10.9428 10.0569 11.1666 10.333 11.1666H12.6663C12.9425 11.1666 13.1663 10.9428 13.1663 10.6666C13.1663 10.3905 12.9425 10.1666 12.6663 10.1666H10.333Z" fill="#616161" />
        </svg>
      ), path: '/subscription'
    },
    {
      text: 'Settings', icon: (
        <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path fillRule="evenodd" clipRule="evenodd" d="M8.11672 0.837754C8.0388 0.831914 7.96055 0.831914 7.88263 0.837754C7.54689 0.862913 7.27481 1.01441 7.02621 1.2089C6.79239 1.39184 6.53373 1.65053 6.23121 1.95308L5.72405 2.3873C5.72405 2.3873 5.4521 2.42267 5.02146 2.42267C4.54732 2.42264 4.14206 2.42262 3.81821 2.46616C3.47241 2.51266 3.14558 2.61688 2.88105 2.88141C2.61651 3.14594 2.51229 3.47278 2.4658 3.81858C2.42226 4.14243 2.42228 4.54769 2.4223 5.02183L2.38694 5.72442L1.95271 6.23157C1.65018 6.53408 1.39147 6.79277 1.20854 7.02658C1.01404 7.27518 0.862547 7.54726 0.837387 7.88299C0.831548 7.96092 0.831548 8.03916 0.837387 8.11709C0.862547 8.45282 1.01404 8.7249 1.20854 8.9735C1.39147 9.20732 1.65016 9.46599 1.95271 9.76851L2.38694 10.2757L2.4223 10.9783C2.42228 11.4524 2.42226 11.8577 2.4658 12.1815C2.51229 12.5273 2.61651 12.8541 2.88105 13.1187C3.14558 13.3832 3.47241 13.4874 3.81821 13.5339C4.14206 13.5775 4.54733 13.5774 5.02147 13.5774L5.72405 13.6128L6.2312 14.047C6.5337 14.3495 6.79241 14.6083 7.02621 14.7912C7.27481 14.9857 7.54689 15.1372 7.88263 15.1623C7.96055 15.1682 8.0388 15.1682 8.11672 15.1623C8.45246 15.1372 8.72454 14.9857 8.97313 14.7912C9.20696 14.6082 9.46563 14.3495 9.76817 14.047L10.2753 13.6128L10.9779 13.5774C11.452 13.5774 11.8573 13.5775 12.1811 13.5339C12.5269 13.4874 12.8538 13.3832 13.1183 13.1187C13.3828 12.8541 13.4871 12.5273 13.5335 12.1815C13.5771 11.8577 13.5771 11.4524 13.577 10.9782L13.6124 10.2757L14.0466 9.76849C14.3492 9.46598 14.6079 9.20732 14.7908 8.9735C14.9853 8.7249 15.1368 8.45282 15.162 8.11709C15.1678 8.03916 15.1678 7.96092 15.162 7.88299C15.1368 7.54726 14.9853 7.27518 14.7908 7.02658C14.6079 6.79275 14.3492 6.53408 14.0466 6.23155L13.6124 5.72442L13.577 5.02183C13.5771 4.54769 13.5771 4.14243 13.5335 3.81858C13.4871 3.47278 13.3828 3.14595 13.1183 2.88141C12.8538 2.61688 12.5269 2.51266 12.1811 2.46616C11.8573 2.42262 11.452 2.42264 10.9779 2.42267C10.5472 2.42267 10.2362 2.3711 10.2362 2.3711L9.76814 1.95308C9.46562 1.65053 9.20695 1.39184 8.97313 1.2089C8.72454 1.01441 8.45246 0.862913 8.11672 0.837754ZM7.99967 5.16671C6.43487 5.16671 5.16634 6.43523 5.16634 8.00004C5.16634 9.56485 6.43487 10.8334 7.99967 10.8334C9.56448 10.8334 10.833 9.56485 10.833 8.00004C10.833 6.43523 9.56448 5.16671 7.99967 5.16671Z" fill="#616161" />
        </svg>
      ), path: '/profile'
    },
>>>>>>> 2945eb6 (Initial commit)
    { text: 'Logout', icon: '', path: '/' }
  ] : [
    { text: 'About', icon: '', path: '/about' },
    { text: 'Feature', icon: '', path: '/feature' },
    { text: 'Resources', icon: '', path: '/resources' },
    { text: 'Pricing', icon: '', path: '/pricing' },
    { text: 'Login', icon: '', path: '/login' }
  ];

  const handleMenuItemClick = (path: string, text: string) => {
    setMobileOpen(false);

    if (text === 'Logout') {
      logout();
    } else {
      router.push(path);
    }
  };

  const handleFilterOpenForFeedPage = () => {
<<<<<<< HEAD
    if (onFilterOpen) {
      onFilterOpen();
    }
  };
=======
    if (pathname === '/feed' && onFilterOpen) {
      onFilterOpen();
    }
  };
  
>>>>>>> 2945eb6 (Initial commit)
  const handleLogoutClick = () => {
    logout();
    router.push('/');
  };

  // Update this section to handle subpaths
  const findCurrentPage = () => {
    // First check for exact matches
    const exactMatch = menuItems.find(item => item.path === pathname);
    if (exactMatch) return exactMatch;
<<<<<<< HEAD
    
=======

>>>>>>> 2945eb6 (Initial commit)
    // Then check for subpaths
    if (pathname.startsWith('/action-hub/')) {
      return menuItems.find(item => item.path === '/action-hub');
    }
    if (pathname.startsWith('/alerts-summary/')) {
      return menuItems.find(item => item.path === '/alerts-summary');
    }
<<<<<<< HEAD
    
    return null;
  };
  
=======

    return null;
  };

>>>>>>> 2945eb6 (Initial commit)
  const currentPage = findCurrentPage();
  const currentPageName = currentPage?.text || '';
  const currentPageIcon = currentPage?.icon || '';

<<<<<<< HEAD
  const drawer = (
    <Box sx={{ width: 300 }}>
      <Box sx={{ p: 3, display: 'flex', alignItems: 'flex-end', justifyContent: 'flex-end' }}>
        <Typography onClick={handleDrawerToggle}>X</Typography>
      </Box>
      <List>
        {menuItems.map((item) => (
          <ListItem
            key={item.text}
                          onClick={() => handleMenuItemClick(item.path, item.text)}
            sx={{
              color: 'black',
              textDecoration: 'none',
              fontSize: '18px',
              height: '35px',
              fontWeight: 'bold',
              '&:hover': {
                bgcolor: '#f5f5f5'
              },
              cursor: 'pointer'
            }}
          >
            <ListItemText primary={item.text} />
          </ListItem>
        ))}
      </List>
    </Box>
  );

  // Navigation links to show on desktop
  const navLinks = [
    { text: 'About', path: '/about' },
    { text: 'Feature', path: '/feature' },
    { text: 'Resources', path: '/resources' },
    { text: 'Pricing', path: '/pricing' }
  ];
  const loginUserNavLinks = [
    { text: 'Feed', path: '/feed' },
    { text: 'Action Hub', path: '/action-hub' },
    { text: 'Insights', path: '/insights' },
    { text: 'Subscription', path: '/subscription' },
    { text: 'Settings', path: '/settings' }
  ];

  return (
    <>
    {!isMobile && !isHomePage && (
    <Sidebar
      isCollapsed={isCollapsed}
      onToggleCollapse={handleToggleCollapse}
      onLogout={handleLogoutClick}
    />
    )}
    <Box sx={{
      display: 'flex',
      bgcolor: '#f5f5f5',
      px: { xs: 0, md: 0 },
      flexDirection: 'column',
      minHeight: '100vh',
      p: 0,
      m: 0,
      marginLeft: { md: isHomePage ? 0 : (isCollapsed ? '80px' : '250px') },
      width: { md: isHomePage ? '100%' : `calc(100% - ${isCollapsed ? '80px' : '250px'})` },
      transition: theme.transitions.create(['margin-left', 'width'], {
        easing: theme.transitions.easing.easeInOut,
        duration: theme.transitions.duration.enteringScreen,
      }),
    }}>
        <Box sx={{
          px: { xs: 0.5, sm: 0.5, md: 1 },
          py: 0,
          mx: { xs: 1, sm: 1, md: 3 },
          my: 1.5,
          bgcolor: pathname === '/feed' ? '#EBEBEC' : '#fff',
          borderRadius: '8px',
          boxShadow: 'none',
        }}>

          <Toolbar
            disableGutters
            sx={{
              display: 'flex',
              justifyContent: 'space-between',
              minHeight: { xs: '40px', sm: '50px' }
            }}
          >
            {/* Left side of header */}
            <Box sx={{ display: 'flex', alignItems: 'center' }}>
              {/* Mobile menu icon - only on mobile */}
              <IconButton
                color="inherit"
                aria-label="open drawer"
                edge="start"
                onClick={handleDrawerToggle}
                sx={{ display: { sm: 'none' }, color: 'black', mx: 0.2 }}
              >
                <i className="ri-menu-2-line" style={{ fontSize: '18px' }}></i> <Typography variant="body1" sx={{ fontWeight: '500', color: 'black',ml:1, display: { xs: isFeedPage ? 'block' : 'none', md: 'none' } }}>Feed</Typography>
              </IconButton>

              {/* Logo */}
              {!isAuthenticated && !isFeedPage && (
                <Typography
                  component={Link}
                  href="/"
                  sx={{
                    display: 'flex',
                    alignItems: 'center',
                    fontWeight: 'bold',
                    fontSize: '20px',
                    color: 'black',
                    textDecoration: 'none'
                  }}
                >
                  <Image src="/tourprism.png" alt="tourprism" style={{ marginRight: isMobile ? '4px' : 0}} width={20} height={32} />
                  <Typography sx={{ fontSize: '18px', ml: 0.5, fontWeight: '550', color: 'black', display: { xs: 'none', md: 'block' } }}>tourprism</Typography>
                </Typography>
              )}

              {/* Feed text - only on feed page */}
              {!isAuthenticated && !isMobile && pathname !== '/' && (
                <Box sx={{ display: 'flex', alignItems: 'center' }}>
                  {!isAuthenticated && (
                    <IconButton onClick={() => router.push('/')} sx={{ display: { xs: 'none', md: 'flex' }, gap: 0.5,
                    '&:hover': {
                      bgcolor: 'transparent'
                    }
                    }}>
                      <svg width="16" height="16" viewBox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10.2965 4.40253C10.1889 4.48379 9.86773 4.72639 9.68259 4.87088C9.31178 5.16026 8.81906 5.55566 8.32779 5.9822C7.83405 6.4109 7.35319 6.86124 6.99969 7.26131C6.82244 7.46192 6.68775 7.63814 6.60008 7.78356C6.51763 7.92033 6.50049 8.00112 6.50049 8.00112C6.50049 8.00112 6.51764 8.07954 6.60008 8.2163C6.68775 8.36172 6.82243 8.53794 6.99969 8.73855C7.35318 9.13863 7.83405 9.58897 8.3278 10.0177C8.81907 10.4442 9.3118 10.8396 9.68261 11.129C9.86776 11.2735 10.1885 11.5157 10.296 11.597C10.5184 11.7608 10.5664 12.0741 10.4026 12.2964C10.2388 12.5188 9.92584 12.5663 9.7035 12.4025L9.70194 12.4014C9.58923 12.3162 9.25637 12.0648 9.06739 11.9173C8.6882 11.6214 8.18093 11.2145 7.67219 10.7728C7.16594 10.3332 6.64681 9.84943 6.25031 9.40069C6.05256 9.17689 5.87475 8.95003 5.74366 8.73258C5.62085 8.52887 5.5 8.27094 5.5 7.99993C5.5 7.72892 5.62086 7.471 5.74367 7.26728C5.87475 7.04984 6.05256 6.82298 6.25031 6.59918C6.64681 6.15043 7.16594 5.66665 7.67218 5.2271C8.18091 4.7854 8.68818 4.37845 9.06736 4.08253C9.25641 3.93499 9.58914 3.68368 9.70172 3.59865L9.70314 3.59757C9.92549 3.43381 10.2388 3.48108 10.4026 3.70342C10.5663 3.92576 10.5188 4.23877 10.2965 4.40253Z" fill="#616161" />
                      </svg>
                      <Typography variant="body1" sx={{ fontWeight: 'bold', color: 'black', display: { xs: 'none', md: 'block' } }}>Feed</Typography>
                    </IconButton>
                  )}
                </Box>
              )}
              
                  
              {isAuthenticated && !isMobile && (
                    <IconButton>
                      {currentPageIcon}
               </IconButton>
                  )}

                  <Typography
                    sx={{
                      alignItems: 'center',
                      ml: 0.1,
                      fontWeight: 'medium',
                      fontSize: '16px',
                      color: 'black',
                      display: { xs: isFeedPage ? 'none' : 'block', md: 'block' }
                    }}
                  >
                    {currentPageName}
                  </Typography>
            </Box>

            {/* Desktop navigation - center of header */}
            <Box sx={{
  display: { xs: 'none', sm: (isAuthenticated || !isHomePage) ? 'none' : 'flex' },
  position: 'absolute',
  left: '50%',
  transform: 'translateX(-50%)',
  gap: 3
}}>
  {isAuthenticated ? loginUserNavLinks.map((link) => (
    <Link key={link.text} href={link.path}>
      {link.text}
    </Link>
  )) : navLinks.map((link) => (
    <Link key={link.text} href={link.path}>
      {link.text}
    </Link>
  ))}
</Box>

            {/* Right side of header */}
            <Box sx={{ display: 'flex', alignItems: 'center' }}>
              {/* Login button for non-logged in users */}
              {!isAuthenticated && !isFeedPage && (
                <Button
                  variant="contained"
                  sx={{
                    bgcolor: '#EBEBEC',
                    borderRadius: 10,
                    color: '#444',
                    boxShadow: 'none',
                    px: 3,
                    '&:hover': {
                      bgcolor: '#EBEBEC',
                      boxShadow: 'none'
                    }
                  }}
                  onClick={() => router.push('/login')}
                >
                  Login
                </Button>
              )}
              {!isAuthenticated && isFeedPage && (
                <Box>
                  <IconButton onClick={() => handleFilterOpenForFeedPage()}>
                  <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fillRule="evenodd" clipRule="evenodd" d="M10 1.04167C7.58375 1.04167 5.625 3.00042 5.625 5.41667C5.625 7.83291 7.58375 9.79167 10 9.79167C12.4162 9.79167 14.375 7.83291 14.375 5.41667C14.375 3.00042 12.4162 1.04167 10 1.04167ZM6.875 5.41667C6.875 3.69078 8.27411 2.29167 10 2.29167C11.7259 2.29167 13.125 3.69078 13.125 5.41667C13.125 7.14256 11.7259 8.54167 10 8.54167C8.27411 8.54167 6.875 7.14256 6.875 5.41667Z" fill="#616161"/>
<path fillRule="evenodd" clipRule="evenodd" d="M15.1907 12.566C15.0552 12.4895 14.9355 12.422 14.8386 12.3643C11.8769 10.6008 8.12341 10.6008 5.1617 12.3643C5.06477 12.422 4.94504 12.4896 4.80949 12.5661C4.21548 12.9012 3.31755 13.4078 2.70241 14.0099C2.31769 14.3864 1.95215 14.8827 1.88569 15.4906C1.81502 16.1372 2.09707 16.7439 2.66292 17.283C3.63913 18.213 4.81061 18.9583 6.32587 18.9583H13.6744C15.1897 18.9583 16.3612 18.213 17.3374 17.283C17.9032 16.7439 18.1853 16.1372 18.1146 15.4906C18.0481 14.8827 17.6826 14.3864 17.2979 14.0099C16.6827 13.4078 15.7847 12.9011 15.1907 12.566ZM5.80122 13.4383C8.36886 11.9094 11.6314 11.9094 14.1991 13.4383C14.339 13.5216 14.4923 13.6086 14.6529 13.6997C15.2467 14.0366 15.9401 14.43 16.4235 14.9032C16.7236 15.1969 16.8515 15.4392 16.872 15.6265C16.8883 15.7751 16.8507 16.0202 16.4752 16.378C15.6119 17.2003 14.7348 17.7083 13.6744 17.7083H6.32587C5.2655 17.7083 4.38835 17.2003 3.52514 16.378C3.14962 16.0202 3.11204 15.7751 3.12829 15.6265C3.14875 15.4392 3.27668 15.1969 3.57679 14.9032C4.06019 14.43 4.75355 14.0366 5.34739 13.6997C5.50794 13.6086 5.66133 13.5216 5.80122 13.4383Z" fill="#616161"/>
</svg>


                  </IconButton>
                  <IconButton onClick={() => handleFilterOpenForFeedPage()}>
                    <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M8.33301 1.04195C8.67819 1.04195 8.95801 1.32177 8.95801 1.66695L8.95801 6.66695C8.95801 7.01212 8.67819 7.29195 8.33301 7.29195C7.98783 7.29195 7.70801 7.01212 7.70801 6.66695L7.70801 4.79197L3.33303 4.79215C2.98786 4.79216 2.70802 4.51235 2.70801 4.16718C2.70799 3.822 2.9878 3.54216 3.33298 3.54215L7.70801 3.54197L7.70801 1.66695C7.70801 1.32177 7.98783 1.04195 8.33301 1.04195Z" fill="#616161" />
                      <path d="M10.208 4.16695C10.208 3.82177 10.4878 3.54195 10.833 3.54195L16.6663 3.54195C17.0115 3.54195 17.2913 3.82177 17.2913 4.16695C17.2913 4.51213 17.0115 4.79195 16.6663 4.79195L10.833 4.79195C10.4878 4.79195 10.208 4.51212 10.208 4.16695Z" fill="#616161" />
                      <path d="M13.958 7.50028C13.958 7.1551 13.6782 6.87528 13.333 6.87528C12.9878 6.87528 12.708 7.1551 12.708 7.50028L12.708 12.5003C12.708 12.8455 12.9878 13.1253 13.333 13.1253C13.6782 13.1253 13.958 12.8455 13.958 12.5003L13.958 10.6249L16.6663 10.6251C17.0115 10.6251 17.2913 10.3453 17.2913 10.0001C17.2914 9.65494 17.0116 9.3751 16.6664 9.37508L13.958 9.37491V7.50028Z" fill="#616161" />
                      <path d="M10.6247 13.3336C10.6247 12.9884 10.3449 12.7086 9.99967 12.7086C9.6545 12.7086 9.37467 12.9884 9.37467 13.3336V18.3336C9.37467 18.6788 9.6545 18.9586 9.99967 18.9586C10.3449 18.9586 10.6247 18.6788 10.6247 18.3336V16.4586L16.6663 16.4586C17.0115 16.4586 17.2913 16.1788 17.2913 15.8336C17.2913 15.4884 17.0115 15.2086 16.6663 15.2086L10.6247 15.2086V13.3336Z" fill="#616161" />
                      <path d="M3.33302 10.6255L10.833 10.6253C11.1782 10.6253 11.458 10.3454 11.458 10.0003C11.458 9.65509 11.1782 9.37527 10.833 9.37528L3.33299 9.37548C2.98781 9.37549 2.708 9.65532 2.70801 10.0005C2.70802 10.3457 2.98785 10.6255 3.33302 10.6255Z" fill="#616161" />
                      <path d="M3.33304 16.4588L7.49971 16.4586C7.84488 16.4586 8.12469 16.1788 8.12467 15.8336C8.12466 15.4884 7.84482 15.2086 7.49964 15.2086L3.33298 15.2088C2.9878 15.2088 2.70799 15.4887 2.70801 15.8338C2.70802 16.179 2.98786 16.4588 3.33304 16.4588Z" fill="#616161" />
                    </svg>


                  </IconButton>
                </Box>
              )}


              {/* Notification and filter icons for logged in users */}
              {isAuthenticated && (
                <>
                  <IconButton
                    onClick={() => setNotificationDrawerOpen(true)}
                    sx={{
                      color: 'black',
                    }}
                  >
                    <Badge badgeContent={isClient ? unreadCount : 0} color="error">
                      <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fillRule="evenodd" clipRule="evenodd" d="M8.7738 1.35363C9.14472 1.11082 9.59748 1.04169 10 1.04169C10.4025 1.04169 10.8553 1.11082 11.2262 1.35363C11.6377 1.62301 11.875 2.05904 11.875 2.60419C11.875 2.991 11.7573 3.39117 11.5658 3.73695C14.1929 4.40545 16.1768 6.71781 16.3255 9.54302C16.3331 9.6868 16.3387 9.82447 16.3441 9.95711C16.3626 10.4084 16.3787 10.8013 16.4604 11.1777C16.5581 11.6276 16.7389 11.9813 17.1066 12.257C17.7477 12.7379 18.125 13.4925 18.125 14.2939C18.125 15.445 17.219 16.4584 16 16.4584H13.0625C12.7729 17.8848 11.5118 18.9584 10 18.9584C8.48815 18.9584 7.22706 17.8848 6.93751 16.4584H4C2.78099 16.4584 1.875 15.445 1.875 14.2939C1.875 13.4925 2.25232 12.7379 2.89344 12.257C3.26108 11.9813 3.44187 11.6276 3.53958 11.1777C3.62134 10.8013 3.63741 10.4084 3.65588 9.9571C3.6613 9.82448 3.66694 9.68679 3.6745 9.54302C3.8232 6.71781 5.80714 4.40545 8.43423 3.73695C8.24271 3.39117 8.125 2.991 8.125 2.60419C8.125 2.05904 8.3623 1.62301 8.7738 1.35363ZM8.23169 16.4584C8.48909 17.1866 9.18361 17.7084 10 17.7084C10.8164 17.7084 11.5109 17.1866 11.7683 16.4584H8.23169ZM16 15.2084C16.478 15.2084 16.875 14.8064 16.875 14.2939C16.875 13.886 16.6829 13.5018 16.3566 13.257C15.6848 12.7532 15.3811 12.098 15.2389 11.443C15.1317 10.9493 15.1104 10.4118 15.0919 9.94517C15.0873 9.82803 15.0828 9.71512 15.0772 9.60872C14.9351 6.90834 12.7041 4.79169 10 4.79169C7.29589 4.79169 5.0649 6.90834 4.92278 9.60872C4.91717 9.71519 4.91271 9.82795 4.90807 9.94517C4.8896 10.4118 4.86833 10.9493 4.7611 11.443C4.61886 12.098 4.31517 12.7532 3.64344 13.257C3.31708 13.5018 3.125 13.886 3.125 14.2939C3.125 14.8064 3.52201 15.2084 4 15.2084H16ZM10.3823 3.27148C10.2206 3.48904 10.0724 3.54169 10 3.54169C9.92757 3.54169 9.77944 3.48904 9.61773 3.27148C9.46066 3.06017 9.375 2.79774 9.375 2.60419C9.375 2.51757 9.392 2.47523 9.40137 2.45742C9.41025 2.44055 9.42483 2.42147 9.45843 2.39947C9.53992 2.34613 9.71216 2.29169 10 2.29169C10.2878 2.29169 10.4601 2.34613 10.5416 2.39947C10.5752 2.42147 10.5898 2.44055 10.5986 2.45742C10.608 2.47523 10.625 2.51757 10.625 2.60419C10.625 2.79774 10.5393 3.06017 10.3823 3.27148Z" fill="#616161" />
                      </svg>

                    </Badge>
                  </IconButton>
                  {isFeedPage && (
                    <IconButton
                      onClick={handleFilterOpenForFeedPage}
                      sx={{
                        color: 'black',
                      }}
                    >
                      <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M8.33301 1.04205C8.67819 1.04205 8.95801 1.32188 8.95801 1.66705L8.95801 6.66705C8.95801 7.01223 8.67819 7.29205 8.33301 7.29205C7.98783 7.29205 7.70801 7.01223 7.70801 6.66705L7.70801 4.79208L3.33303 4.79226C2.98786 4.79227 2.70802 4.51246 2.70801 4.16728C2.70799 3.8221 2.9878 3.54227 3.33298 3.54226L7.70801 3.54208L7.70801 1.66705C7.70801 1.32188 7.98783 1.04205 8.33301 1.04205Z" fill="#616161" />
                        <path d="M10.208 4.16705C10.208 3.82188 10.4878 3.54205 10.833 3.54205L16.6663 3.54205C17.0115 3.54205 17.2913 3.82188 17.2913 4.16705C17.2913 4.51223 17.0115 4.79195 16.6663 4.79195L10.833 4.79195C10.4878 4.79195 10.208 4.51212 10.208 4.16695Z" fill="#616161" />
                        <path d="M13.958 7.50039C13.958 7.15521 13.6782 6.87539 13.333 6.87539C12.9878 6.87539 12.708 7.15521 12.708 7.50039L12.708 12.5004C12.708 12.8456 12.9878 13.1254 13.333 13.1254C13.6782 13.1254 13.958 12.8455 13.958 12.5003L13.958 10.625L16.6663 10.6252C17.0115 10.6252 17.2913 10.3454 17.2913 10.0002C17.2914 9.65504 17.0116 9.37521 16.6664 9.37518L13.958 9.37502V7.50039Z" fill="#616161" />
                        <path d="M10.6247 13.3337C10.6247 12.9885 10.3449 12.7087 9.99967 12.7087C9.6545 12.7087 9.37467 12.9885 9.37467 13.3337V18.3337C9.37467 18.6789 9.6545 18.9587 9.99967 18.9587C10.3449 18.9587 10.6247 18.6789 10.6247 18.3337V16.4587L16.6663 16.4587C17.0115 16.4587 17.2913 16.1789 17.2913 15.8337C17.2913 15.4885 17.0115 15.2087 16.6663 15.2087L10.6247 15.2087V13.3337Z" fill="#616161" />
                        <path d="M3.33302 10.6256L10.833 10.6254C11.1782 10.6254 11.458 10.3455 11.458 10.0004C11.458 9.65519 11.1782 9.37538 10.833 9.37539L3.33299 9.37559C2.98781 9.3756 2.708 9.65543 2.70801 10.0006C2.70802 10.3458 2.98785 10.6256 3.33302 10.6256Z" fill="#616161" />
                        <path d="M3.33304 16.4589L7.49971 16.4587C7.84488 16.4587 8.12469 16.1789 8.12467 15.8337C8.12466 15.4885 7.84482 15.2087 7.49964 15.2087L3.33298 15.2089C2.9878 15.2089 2.70799 15.4888 2.70801 15.834C2.70802 16.1791 2.98786 16.4589 3.33304 16.4589Z" fill="#616161" />
                      </svg>


                    </IconButton>
                  )}
                </>
              )}
            </Box>
          </Toolbar>
        </Box>

      {/* Mobile drawer */}
      <Drawer
        variant="temporary"
        anchor="left"
        open={mobileOpen}
        onClose={handleDrawerToggle}
        ModalProps={{
          keepMounted: true // Better open performance on mobile.
        }}
        sx={{
          display: { xs: 'block', sm: 'none' },
          '& .MuiDrawer-paper': { boxSizing: 'border-box', width: 300 }
        }}
      >
        {drawer}
      </Drawer>

      {/* Display Banner for authenticated users */}
      {isAuthenticated && pathname !== '/profile' && <Banner />}

      <Container component="main" sx={{ flex: 1, py: 4, px: { xs: 2, sm: 3, md: 4 } }}>
        {children}
      </Container>

      {isFooter && pathname !== '/feed' && pathname !== '/post-alert' && (
        <Box
          component="footer"
          sx={{
            py: 5,
            px: 1,
            mt: 'auto',
            textAlign: 'center',
            borderTop: '1px solid rgb(218, 218, 218)'
          }}
        >
          <Container maxWidth="lg">
            {/* Footer Links Row */}
            <Box sx={{
              display: 'flex',
              justifyContent: 'center',
              gap: { xs: 2, md: 3 },
              mb: 2
            }}>
              <Link href="/about" style={{ color: '#000', textDecoration: 'none', fontSize: '14px' }}>
                About us
              </Link>
              <Link href="/privacy-policy" style={{ color: '#000', textDecoration: 'none', fontSize: '14px' }}>
                Privacy Policy
              </Link>
              <Link href="/terms" style={{ color: '#000', textDecoration: 'none', fontSize: '14px' }}>
                Terms of Use
              </Link>
            </Box>

            {/* Copyright */}
            <Typography variant="body2" sx={{ mb: 1, fontSize: '14px' }}>
              © 2025. Tourprism Limited. Made in Scotland.
            </Typography>

            {/* Social Icons */}
            <Box sx={{
              display: 'flex',
              justifyContent: 'center',
              gap: 1.5
            }}>
              <Link href="mailto:aabeyratne@tourprism.com" target="_blank">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fillRule="evenodd" clipRule="evenodd" d="M14.9195 2.78751C12.9665 2.7375 11.0325 2.7375 9.07949 2.78751H9.02148C7.49648 2.82752 6.26952 2.85747 5.28652 3.02752C4.25652 3.20757 3.41947 3.54764 2.71347 4.25784C2.00947 4.96803 1.6675 5.78826 1.4915 6.80854C1.3235 7.7688 1.2985 8.96917 1.2665 10.4496V10.5096C1.2445 11.4998 1.2445 12.5002 1.2665 13.4904V13.5504C1.2995 15.0308 1.32448 16.2312 1.49248 17.1915C1.66848 18.2117 2.01055 19.032 2.71455 19.7422C3.42055 20.4524 4.2575 20.7924 5.2875 20.9725C6.2705 21.1425 7.49755 21.1725 9.02255 21.2125H9.08046C11.0335 21.2625 12.9675 21.2625 14.9205 21.2125H14.9785C16.5035 21.1725 17.7305 21.1425 18.7135 20.9725C19.7435 20.7924 20.5805 20.4524 21.2865 19.7422C21.9905 19.032 22.3325 18.2117 22.5085 17.1915C22.6765 16.2312 22.7015 15.0308 22.7335 13.5504V13.4904C22.7555 12.5002 22.7555 11.4998 22.7335 10.5096V10.4496C22.7015 8.96917 22.6765 7.7688 22.5085 6.80854C22.3325 5.78826 21.9905 4.96803 21.2865 4.25784C20.5805 3.54764 19.7435 3.20757 18.7135 3.02752C17.7305 2.85747 16.5035 2.82752 14.9785 2.78751H14.9205H14.9195ZM7.38154 7.84886C7.02454 7.6388 6.56449 7.75886 6.35449 8.11895C6.14349 8.46905 6.26148 8.92916 6.61748 9.14922L9.55947 10.8897C10.4305 11.3999 11.1825 11.7499 11.9995 11.7499C12.8165 11.7499 13.5685 11.3999 14.4395 10.8897L17.3815 9.14922C17.7375 8.92916 17.8565 8.46905 17.6455 8.11895C17.4345 7.75886 16.9745 7.6388 16.6175 7.84886L13.6755 9.58938C12.8315 10.0895 12.3825 10.2495 11.9995 10.2495C11.6165 10.2495 11.1675 10.0895 10.3235 9.58938L7.38154 7.84886Z" fill="#757575"/>
</svg>
              </Link>
              <Link href="https://uk.linkedin.com/company/tourprism" target="_blank">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fillRule="evenodd" clipRule="evenodd" d="M11.9428 1.75H12.0572C14.2479 1.74999 15.9686 1.74998 17.312 1.93059C18.6886 2.11568 19.7809 2.50271 20.6391 3.36091C21.4973 4.21911 21.8843 5.31137 22.0694 6.68802C22.25 8.03144 22.25 9.75214 22.25 11.9428V12.0572C22.25 14.2479 22.25 15.9686 22.0694 17.312C21.8843 18.6886 21.4973 19.7809 20.6391 20.6391C19.7809 21.4973 18.6886 21.8843 17.312 22.0694C15.9686 22.25 14.2479 22.25 12.0572 22.25H11.9428C9.7521 22.25 8.03144 22.25 6.68802 22.0694C5.31137 21.8843 4.21911 21.4973 3.36091 20.6391C2.50272 19.7809 2.11568 18.6886 1.93059 17.312C1.74998 15.9686 1.74999 14.2479 1.75 12.0572V11.9428C1.74999 9.75213 1.74998 8.03144 1.93059 6.68802C2.11568 5.31137 2.50272 4.21911 3.36091 3.36091C4.21911 2.50271 5.31137 2.11568 6.68802 1.93059C8.03143 1.74998 9.75214 1.74999 11.9428 1.75ZM8.00195 10.5C8.00195 9.94771 7.55424 9.5 7.00195 9.5C6.44967 9.5 6.00195 9.94771 6.00195 10.5L6.00195 17C6.00195 17.5523 6.44967 18 7.00195 18C7.55424 18 8.00195 17.5523 8.00195 17L8.00195 10.5ZM11.002 9C11.4073 9 11.7564 9.2412 11.9134 9.58791C12.5213 9.215 13.2365 9 14.002 9C16.2111 9 18.002 10.7909 18.002 13V17C18.002 17.5523 17.5542 18 17.002 18C16.4497 18 16.002 17.5523 16.002 17V13C16.002 11.8954 15.1065 11 14.002 11C12.8974 11 12.002 11.8954 12.002 13V17C12.002 17.5523 11.5542 18 11.002 18C10.4497 18 10.002 17.5523 10.002 17L10.002 10C10.002 9.44771 10.4497 9 11.002 9ZM8.25977 7C8.25977 7.69036 7.70012 8.25 7.00977 8.25H7.00078C6.31043 8.25 5.75078 7.69036 5.75078 7C5.75078 6.30964 6.31043 5.75 7.00078 5.75H7.00977C7.70012 5.75 8.25977 6.30964 8.25977 7Z" fill="#757575"/>
</svg>
              </Link>
              <Link href="https://x.com/tourprism" target="_blank">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fillRule="evenodd" clipRule="evenodd" d="M17.312 1.93059C15.9686 1.74998 14.2479 1.74999 12.0572 1.75H11.9428C9.75212 1.74999 8.03144 1.74998 6.68802 1.93059C5.31137 2.11568 4.21911 2.50272 3.36091 3.36091C2.50272 4.21911 2.11568 5.31137 1.93059 6.68802C1.74998 8.03144 1.74999 9.75212 1.75 11.9428V12.0572C1.74999 14.2479 1.74998 15.9686 1.93059 17.312C2.11568 18.6886 2.50272 19.7809 3.36091 20.6391C4.21911 21.4973 5.31137 21.8843 6.68802 22.0694C8.03144 22.25 9.7521 22.25 11.9428 22.25H12.0572C14.2479 22.25 15.9686 22.25 17.312 22.0694C18.6886 21.8843 19.7809 21.4973 20.6391 20.6391C21.4973 19.7809 21.8843 18.6886 22.0694 17.312C22.25 15.9686 22.25 14.2479 22.25 12.0572V11.9428C22.25 9.75214 22.25 8.03144 22.0694 6.68802C21.8843 5.31137 21.4973 4.21911 20.6391 3.36091C19.7809 2.50272 18.6886 2.11568 17.312 1.93059ZM7 6.25C6.71836 6.25 6.46045 6.40779 6.33223 6.65856C6.20401 6.90933 6.22709 7.21079 6.39199 7.43912L10.2116 12.7278L6.46967 16.4697C6.17678 16.7626 6.17678 17.2374 6.46967 17.5303C6.76257 17.8232 7.23744 17.8232 7.53033 17.5303L11.1012 13.9595L13.6142 17.4391C13.7552 17.6344 13.9814 17.75 14.2222 17.75H17C17.2816 17.75 17.5396 17.5922 17.6678 17.3414C17.796 17.0907 17.7729 16.7892 17.608 16.5609L13.7884 11.2722L17.5303 7.53033C17.8232 7.23744 17.8232 6.76256 17.5303 6.46967C17.2374 6.17678 16.7626 6.17678 16.4697 6.46967L12.8988 10.0405L10.3858 6.56088C10.2448 6.36565 10.0186 6.25 9.77778 6.25H7Z" fill="#757575"/>
</svg>
              </Link>
            </Box>
          </Container>
        </Box>
      )}

      <NotificationDrawer
        open={notificationDrawerOpen}
        onClose={() => setNotificationDrawerOpen(false)}
        notifications={notifications}
        onNotificationUpdate={fetchNotifications}
      />
      
      {/* Add the BackToTop component */}
      <BackToTop />
    </Box>
=======
  return (
    <>
      {!isMobile && !isHomePage && (
        <Sidebar
          isCollapsed={isCollapsed}
          onToggleCollapse={handleToggleCollapse}
          onLogout={handleLogoutClick}
        />
      )}
      <Box sx={{
        display: 'flex',
        bgcolor: '#f5f5f5',
        px: { xs: 0, md: 0 },
        flexDirection: 'column',
        minHeight: '100vh',
        p: 0,
        m: 0,
        marginLeft: { md: isHomePage ? 0 : (isCollapsed ? '80px' : '250px') },
        width: { md: isHomePage ? '100%' : `calc(100% - ${isCollapsed ? '80px' : '250px'})` },
        transition: theme.transitions.create(['margin-left', 'width'], {
          easing: theme.transitions.easing.easeInOut,
          duration: theme.transitions.duration.enteringScreen,
        }),
      }}>
        {/* Navbar Component */}
        <Navbar 
          isFeedPage={isFeedPage}
          isHomePage={isHomePage}
          handleDrawerToggle={handleDrawerToggle}
          handleFilterOpenForFeedPage={handleFilterOpenForFeedPage}
          setNotificationDrawerOpen={setNotificationDrawerOpen}
          unreadCount={unreadCount}
          isClient={isClient}
          currentPageName={currentPageName}
          currentPageIcon={currentPageIcon}
        />

        {/* Mobile Sidebar Component */}
        <MobileSidebar
          mobileOpen={mobileOpen}
          handleDrawerToggle={handleDrawerToggle}
          menuItems={menuItems}
          handleMenuItemClick={handleMenuItemClick}
        />

        {/* Display Banner for authenticated users */}

        <Container component="main" sx={{ flex: 1, py: 4, px: { xs: 2, sm: 3, md: 4 } }}>
          {children}
        </Container>

        {/* Footer Component */}
        {isFooter && pathname !== '/feed' && pathname !== '/post-alert' && (
          <Footer />
        )}

        <NotificationDrawer
          open={notificationDrawerOpen}
          onClose={() => setNotificationDrawerOpen(false)}
          notifications={notifications}
          onNotificationUpdate={fetchNotifications}
        />

        {/* Add the BackToTop component */}
        <BackToTop />
      </Box>
>>>>>>> 2945eb6 (Initial commit)
    </>
  );
};

export default Layout;